


// for (const number of numbers) {
//   if (number % 2 !== 0) {
//     continue;
//   }
//   console.log(number);
//   total += number;
// }

// console.log(total);

/*
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ–∏—Å–∫–∞ –ª–æ–≥–∏–Ω–∞
 * - –ï—Å–ª–∏ –ª–æ–≥–∏–Ω–∞ –Ω–µ—Ç, –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [–ª–æ–≥–∏–Ω] –Ω–µ –Ω–∞–π–¥–µ–Ω.'
 * - –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –ª–æ–≥–∏–Ω, –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [–ª–æ–≥–∏–Ω] –Ω–∞–π–¥–µ–Ω.'
 *
 * - –°–Ω–∞—á–∞–ª–∞ —á–µ—Ä–µ–∑ for
 * - –ü–æ—Ç–æ–º —á–µ—Ä–µ–∑ for...of
 * - –õ–æ–≥–∏–∫–∞ break
 * - –ú–µ—Ç–æ–¥ includes() —Å —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º
 */

// const logins = ['m4ngoDoge', 'k1widab3st', 'poly1scute', 'aj4xth3m4n'];
// const loginToFind = 'aj4xth3m4n';
// let message = '';

// for (let i = 0; i < logins.length; i += 1) {
//   console.log(logins[i]);
//   if (loginToFind === logins[i]) {
//     message = `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${'aj4xth3m4n'} –Ω–∞–π–¥–µ–Ω.`;
//     break;
//   }
//   message = `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${'aj4xth3m4n'} –Ω–µ –Ω–∞–π–¥–µ–Ω.`;
// }
// console.log(message);

// for (const login of logins) {
//   console.log(login);
//   if (loginToFind === login) {
//     message = `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${'aj4xth3m4n'} –Ω–∞–π–¥–µ–Ω.`;
//     break;
//   }
//   message = `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${'aj4xth3m4n'} –Ω–µ –Ω–∞–π–¥–µ–Ω.`;
// }

// const message = logins.includes(loginToFind)
//   ? `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${'aj4xth3m4n'} –Ω–∞–π–¥–µ–Ω.`
//   : `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${'aj4xth3m4n'} –Ω–µ –Ω–∞–π–¥–µ–Ω.`;

// console.log(message);

/*
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ–∏—Å–∫–∞ —Å–∞–º–æ–≥–æ –º–∞–ª–µ–Ω—å–∫–æ–≥–æ —á–∏—Å–ª–∞ –≤ –º–∞—Å—Å–∏–≤–µ,
 * –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ —á—Ç–æ —á–∏—Å–ª–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ (–Ω–µ –ø–æ–≤—Ç–æ—Ä—è—é—Ç—Å—è).
 */

// const numbers = [51, 18, 13, 24, 7, 85, 19];
// let smallestNumb = numbers[0];

// for (let i = 0; i < numbers.length; i += 1) {
//   console.log(numbers[i]);
//   if (smallestNumb > numbers[i]) {
//     smallestNumb = numbers[i];
//   }
// }

// for (const number of numbers) {
//   console.log(number);
//   if (smallestNumb > number) {
//     smallestNumb = number;
//   }
// }

// console.log(smallestNumb);

/*
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –≤ –æ–¥–Ω–æ —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
 * –≠–ª–µ–º–µ–Ω—Ç–æ–≤ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ.
 * –ü—É—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞  –≤ —Å—Ç—Ä–æ–∫–µ –±—É–¥—É—Ç —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –∑–∞–ø—è—Ç–æ–π.
 * - –°–Ω–∞—á–∞–ª–∞ —á–µ—Ä–µ–∑ for
 * - –ü–æ—Ç–æ–º —á–µ—Ä–µ–∑ join()
 */
// const friends = ['Mango', 'Poly', 'Kiwi', 'Ajax'];

// let string = '';
// for (const friend of friends) {
//   string += friend + ',';
// }
// string = string.slice(0, string.length - 1);

// const string = friends.join(',');

// console.log(string);

/*
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π –∑–∞–º–µ–Ω—è–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä –∫–∞–∂–¥–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ –≤ —Å—Ç—Ä–æ–∫–µ –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–π.
 * –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ ¬´JavaScript¬ª, —Ç–æ –Ω–∞ –≤—ã—Ö–æ–¥–µ –¥–æ–ª–∂–µ–Ω–∞ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–∞ ¬´jAVAsCRIPT¬ª.
 */

// const string = 'qWeRTzxCv';
// let letters = string.split('');
// let inverseString = '';
// console.log(letters);

// for (const letter of letters) {
//   console.log(letter);

  //   if (letter === letter.toLowerCase()) {
  //     inverseString += letter.toUpperCase();
  //   } else {
  //     inverseString += letter.toLowerCase();
  //    };

  // const isInLowerCase = letter === letter.toLowerCase();
//   inverseString += letter === letter.toLowerCase()
//       ? letter.toUpperCase()
//       : letter.toLowerCase();
// }

// console.log(inverseString);

/*
 * –î–µ–ª–∞–µ–º slug –≤ URL –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä –Ω–∞ dev.to)
 * –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏ —Å–æ—Å—Ç–æ–∏—Ç —Ç–æ–ª—å–∫–æ –∏–∑ –±—É–∫–≤ –∏ –ø—Ä–æ–±–µ–ª–æ–≤
 *
 * - –ù–æ—Ä–º–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É
 * - –†–∞–∑–±–∏–≤–∞–µ–º –ø–æ —Å–ª–æ–≤–∞–º
 * - –°—à–∏–≤–∞–µ–º –≤ —Å—Ç—Ä–æ–∫—É —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏
 */

// const title = 'Top 10 benefits of React framework';
// let slug = '';

// slug = title.toLowerCase().split(' ').join('-');

// console.log(slug);


/*
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π —Å—á–∏—Ç–∞–µ—Ç —Å—É–º–º—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–≤—É—Ö –º–∞—Å—Å–∏–≤–æ–≤.
 */

// const arrayOne = [4, 8, 77, 61, 12];
// const arrayTwo = [42, 18, 7, 11, 32, 15];
// const array = arrayOne.concat(arrayTwo);
// let sum = 0;

// for (const value of array) {
//   sum += value;
// }

// console.log(sum);

/*
 * –†–∞–±–æ—Ç–µ–º —Å –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ trello
 * - –ú–µ—Ç–æ–¥ splice()
 * - –£–¥–∞–ª–∏—Ç—å
 * - –î–æ–±–∞–≤–∏—Ç—å
 * - –û–±–Ω–æ–≤–∏—Ç—å
 */

// const cards = [
//   '–ö–∞—Ä—Ç–æ—á–∫–∞-1',
//   '–ö–∞—Ä—Ç–æ—á–∫–∞-2',
//   '–ö–∞—Ä—Ç–æ—á–∫–∞-3',
//   '–ö–∞—Ä—Ç–æ—á–∫–∞-4',
//   '–ö–∞—Ä—Ç–æ—á–∫–∞-5',
//   '–ö–∞—Ä—Ç–æ—á–∫–∞-6',
// ];

// console.table(cards);

// const cardToRemove = '–ö–∞—Ä—Ç–æ—á–∫–∞-5';
// const index = cards.indexOf(cardToRemove);
// console.log(index);

// cards.splice(index, 1);

// const cardToInsert = '–ö–∞—Ä—Ç–æ—á–∫–∞-7';
// const index = 2;


// cards.splice(index, 2, cardToInsert);

// console.table(cards);

/*  
  –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏, 
  –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –≤ –∑–º—ñ–Ω–Ω—ñ–π –≤–µ–ª–∏—á–∏–Ω —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞.
  –ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º. 
  –ú–µ—Ç–æ–¥ split
*/

// const values = "8 11";
// const valuesArray = values.split(' ');

// let square = Number(valuesArray[0]) * Number(valuesArray[1]);

// // !!! another var
// // let square = 1;
// // for (const value of valuesArray) {
// //   square *= value;
// // }
// console.log(square);

/*
  –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É fruits —Ü–∏–∫–ª–æ–º for.
  –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –≤–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫ —É 
  —Ñ–æ—Ä–º–∞—Ç—ñ –Ω–æ–º–µ—Ä_–µ–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–Ω—è_–µ–ª–µ–º–µ–Ω—Ç–∞. 
  
  –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—î –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ –ø–µ—Ä—à–æ–≥–æ.
*/

// const fruits = ["üçé", "üçá", "üçë", "üçå", "üçã"];

// for (let i = 0; i < fruits.length; i += 1) {
//     console.log(`${i+1}: ${fruits[i]}`);
// }

/*
  –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π 
  –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –£ –∑–º—ñ–Ω–Ω–∏—Ö names —ñ phones –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è 
  —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤, —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏. 
  
  –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ 
  –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å. –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.
*/

// const names = "Jacob,William,Solomon,Kate";
// const phones = "38001234567,38001112233,380055566377,38099912233";

// const namesArray = names.split(',');
// const phonesArray = phones.split(',');

// for (let i = 0; i < namesArray.length; i += 1) {
//    console.log(`${namesArray[i]} - ${phonesArray[i]}`);
// }


/*
  –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —É—Å—ñ —Å–ª–æ–≤–∞ —Ä—è–¥–∫–∞ –∫—Ä—ñ–º –ø–µ—Ä—à–æ–≥–æ 
  —Ç–∞ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ. –†–µ–∑—É–ª—å—Ç—É—é—á–∏–π —Ä—è–¥–æ–∫ –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∞–±–æ –∑–∞–∫—ñ–Ω—á—É–≤–∞—Ç–∏—Å—è 
  –ø—Ä–æ–±—ñ–ª–æ–º. –°–∫—Ä–∏–ø—Ç –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ —Ä—è–¥–∫–∞.
  –º–µ—Ç–æ–¥–∏ pop shift join
*/

// const stringEl = "Welcome to the future";

// const stringArray = stringEl.split(' ');

// stringArray.pop();

// stringArray.shift();

// const newString = stringArray.join(' ');

// console.log(newString);


/*
  –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π ¬´—Ä–æ–∑–≤–µ—Ä—Ç–∞—î¬ª —Ä—è–¥–æ–∫ (–∑–≤–æ—Ä–æ—Ç–Ω—ñ–π –ø–æ—Ä—è–¥–æ–∫ –ª—ñ—Ç–µ—Ä)
  —ñ –≤–∏–≤–æ–¥–∏—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
  –ú–µ—Ç–æ–¥–∏ split reverse join
*/

// // Variant with words
// const string = "Welcome to the future";

// console.log(string);

// // let stringArray = string.split('');

// // console.log(stringArray);

// // stringArray = stringArray.reverse('');

// // console.log(stringArray);

// // stringArray = stringArray.join('');

// const stringArray = string.split('').reverse('').join('');

// console.log(stringArray);

// Variant with letters
// const string = "Welcome to the future";

// let stringArray = string.split(' ');

// stringArray = stringArray.reverse(' ');

// stringArray = stringArray.join(' ');

// console.log(stringArray);


// const string = "Welcome to the future";

// let newString = "";

// for (let index = 0; index < string.length; index += 1) {
//   // 1 iteration - W, ""
//   // 2 iteration - e, "W"
//   // 3 iteration - l, "eW"
//   // final result - `lew`

//   newString = string[index] + newString;
// }

// console.log(newString);


/*
  –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ—à—É–∫—É –Ω–∞–π–º–µ–Ω—à–æ–≥–æ —á–∏—Å–ª–∞ —É –º–∞—Å–∏–≤—ñ. 
  –ö–æ–¥ –º–∞—î –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ –º–∞—Å–∏–≤—É —á–∏—Å–µ–ª. 
  –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü–∏–∫–ª for of –¥–ª—è —Ä–æ–∑–≤'—è–∑–∞–Ω–Ω—è –∑–∞–¥–∞—á—ñ.
*/

// const numbers = [100, 120, 10, 7, 85, -15];

// let minNumber = numbers[0];

// for (const number of numbers) {
//   if (minNumber > number) {
//     minNumber = number
//   }
// }
// console.log(minNumber);
